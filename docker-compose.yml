services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    container_name: frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    volumes:
      - ./frontend/images:/usr/share/nginx/html/images:ro
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bot-network


  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - bot-network
    volumes:
      - ./.env:/app/.env:ro
    environment:
      # Add connection configuration
      - DB_CONNECTION_LIMIT=10
      - DB_CONNECT_TIMEOUT=20000
      - API_TIMEOUT_MS=10000
      # WebSocket configuration
      - WS_RECONNECT_DELAY=2000
      - WS_MAX_RECONNECT_DELAY=60000
      - WS_HEARTBEAT_TIMEOUT=30000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      database:
        condition: service_healthy
        

  # Database service
  database:
    build: ./database
    container_name: database
    restart: unless-stopped
    # Tuned MariaDB configuration for better performance and stability
    command: >
      --innodb-buffer-pool-size=128M
      --max-connections=100
      --connect-timeout=20
      --wait-timeout=600
      --max-allowed-packet=16M
      --tmp-table-size=32M
      --max-heap-table-size=32M
      --net-read-timeout=30
      --net-write-timeout=60
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
      - ./.env:/app/.env:ro
    environment:
    # Change it for your own use credentials
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    healthcheck:
      # Change it for your own use credentials
      test: mysqladmin ping -h database -u trading_bot_user -pmariadb_secret
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - bot-network

  phpmyadmin:
       image: phpmyadmin/phpmyadmin
       container_name: phpmyadmin
       restart: unless-stopped
       ports:
         - "8080:80"
       environment:
         - PMA_HOST=database
         - PMA_USER=${DB_USER}
         - PMA_PASSWORD=${DB_PASSWORD}
       depends_on:
         database:
           condition: service_healthy
       networks:
         - bot-network

volumes:
  db-data:
    driver: local

networks:
  bot-network:
    driver: bridge