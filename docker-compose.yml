services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - NODE_ENV=production

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/mysql
      - ./database/conf/mariadb.cnf:/etc/mysql/conf.d/mariadb.cnf:ro
    networks:
      - app-network
    environment:
      - MARIADB_MAX_ALLOWED_PACKET=64M
      - MARIADB_CONNECT_TIMEOUT=60
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MARIADB_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local