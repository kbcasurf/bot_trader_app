name: Code Analysis and Security Testing

on:
  push:
    branches: [ main, pipeline ]
  pull_request:
    branches: [ main ]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install dependencies
        run: |
          cd backend
          npm install
          cd ../frontend
          npm install
      
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=bot_trader_app
            -Dsonar.organization=your-organization
            -Dsonar.sources=backend,frontend
            -Dsonar.exclusions=**/node_modules/**,**/test/**
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info

  checkov:
    name: Checkov Infrastructure Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infrastructure
          framework: terraform
          output_format: github_failed_only
          download_external_modules: true
          log_level: INFO

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install dependencies and run lint
        run: |
          cd backend
          npm install
          npm run lint || true
          cd ../frontend
          npm install
          npm run lint || true

  owasp-zap-scan:
    name: OWASP ZAP DAST Scan
    runs-on: ubuntu-latest
    needs: [lint]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Start application containers
        run: docker-compose up -d
      
      - name: Wait for application to be ready
        run: |
          echo "Waiting for application to be ready..."
          sleep 60
      
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:80'
          # Run the most comprehensive scan possible
          cmd_options: '-a -j -m 10 -T 60'
          allow_issue_writing: true
          fail_action: false  # Don't fail the workflow but report findings
      
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: zap-scan-report
          path: report.html
      
      - name: Stop application containers
        if: always()
        run: docker-compose down